import (
    "std.um"
    
    "src/build.um"
    "src/init.um"
    "src/install.um"
    "src/remove.um"
    "src/run.um"
    "src/search.um"
    "src/update.um"
    "src/register.um"
    "src/upload.um"
)

fn help() {
    printf("UmBox v1.1 - an umka package manager\n\n" +
        "Arguments:\n" +
        "\t-h, --help - Display this help message\n" +
        "\t-u, --url - Specify the UmBox server URL (Default: https://umbox.tophat2d.dev/)\n\n" +
        "Modes:\n" +
        "\tbuild - Build a box.tar\n" +
        "\tinit - Initialize a package\n" +
        "\tinstall - Install a package\n" +
        "\tremove - Remove a package\n" +
        "\trun - Run the current package\n" +
        "\tsearch - Search for a package\n" +
        "\tupdate - Update installed package\n" + 
        "\tregister - Register a package\n" +
        "\tupload - Upload a file to a package\n"
    )
}

fn main() {
    url := "https://umbox.tophat2d.dev/"
             
    if std.argc() == 1 {
        help()
        return
    }

    for i:=1; i < std.argc(); i++ {
        if std.argv(i) == "-h" || std.argv(i) == "--help" {
            help()
            return
        } else if std.argv(i) == "-u" || std.argv(i) == "--url" {
            if i == std.argc() - 1 {
                printf("--url requires an argument")
                return
            }
            
            url = std.argv(i + 1)
            i += 1
        } else {
            if std.argv(i) == "build" {
                build.run(url, i + 1)
            } else if std.argv(i) == "init" {
                init.run(url, i + 1)
            } else if std.argv(i) == "install" {
                install.run(url, i + 1)
            } else if std.argv(i) == "remove" {
                remove.run(url, i + 1)
            } else if std.argv(i) == "run" {
                run.run(url, i + 1)
            } else if std.argv(i) == "search" {
                search.run(url, i + 1)
            } else if std.argv(i) == "update" {
                update.run(url, i + 1)
            } else if std.argv(i) == "register" {
                register.run(url, i + 1)
            } else if std.argv(i) == "upload" {
                upload.run(url, i + 1)
            } else {
                printf("Unknown command: %s\n", std.argv(i))
                help()
                return
            }
            
            break
        }
    }
}

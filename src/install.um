
import (
	"std.um"
	"common.um"
	"update.um"
)

fn run*(boxStr: str): std::Err {
	box := common::parseDep(boxStr)

	meta, err := common::getMeta("box.json") 
	if err.code != 0 {
		return common::error(.boxJsonError, err.msg)
	}

	if !box.exists() {
		return common::error(.boxNotFound, box.encode())
	}

	exists := false
	for i,dep in meta.dependencies {
		if dep.getName() == box.getName() {
			exists = true
			break
		}
	}

	if !exists {
		meta.dependencies = append(meta.dependencies, box)
	}

	f := std::fopen("box.json", "w").item0
	fprintf(f, "%s", meta.toJSON())
	std::fclose(f)

	return update::run()
}

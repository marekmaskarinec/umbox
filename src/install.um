
import (
	"std.um"
	"common.um"
	"update.um"
	"../umbox/io/io.um"
)

fn run*(url: str, argi: int): std.Err {
	if argi != std.argc() - 1 {
		fprintf(std.stderr(), "Usage: umbox install <box_name>\n")
		return {}
	}
	
	box := common.parseDep(std.argv(argi))

	meta, err := common.getMeta("box.json") 
	if err.code != 0 {
		return err
	}

	if !box.exists() {
		fprintf(std.stderr(), "Box '%s' does not exist.\n", box.getName())
		return {}
	}

	exists := false
	for i,dep in meta.dependencies {
		if dep.getName() == box.getName() {
			exists = true
			break
		}
	}

	if !exists {
		meta.dependencies = append(meta.dependencies, box)
	}

	f := std.fopen("box.json", "w").item0
	fprintf(f, "%s", meta.toJSON())
	std.fclose(f)

	return update.run(url, std.argc())
}

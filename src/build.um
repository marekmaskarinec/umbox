
import (
	"std.um"
	"common.um"
	
	"../umbox/os/os.um"
	"../umbox/tar/tar.um"
)

fn run*(): std::Err {
	meta, err := common::getMeta("box.json") 
	if err.code != 0 {
		return err
	}
	
	if len(meta.preBuild) > 0 {
		code := std::system(meta.preBuild)

		if code != 0 {
			return common::error(.preBuild, std::itoa(code))
		}
	}
	
	t, err := tar::open("box.tar", "w")
	if err.code != 0 {
		return err
	}
	
	t.addFile("box.json")
	if len(meta.readme) > 0 {
		t.addFile(meta.readme)
	}
	
	for i,f in meta.include {
		if os::isfile(f) {
			t.addFile(f)
		} else {
			os::walk(f, fn(p: str) |t| {
				t.addFile(p)
			})
		}
	}
	
	err = t.finalize()
	if err.code != 0 {
		return err
	}
	
	err = t.close()
	if err.code != 0 {
		return err
	}
	
	if len(meta.postBuild) > 0 {
		code := std::system(meta.postBuild)

		if code != 0 {
			return common::error(.postBuild, std::itoa(code))
		}
	}

	return {}
}

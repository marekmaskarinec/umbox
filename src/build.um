
import (
	"std.um"
	"common.um"
	
	"../umbox/os/os.um"
	"../umbox/tar/tar.um"
)

fn run*(url: str, argi: int) {
	if argi != std.argc() {
		fprintf(std.stderr(), "Build requires no arguments.\n")
		return
	}

	meta, err := common.getMeta("box.json") 
	std.exitif(err)
	
	if len(meta.preBuild) > 0 {
		code := std.system(meta.preBuild)

		if code != 0 {
			fprintf(std.stderr(), "Pre-build failed with code %d\n", code)
			return
		}
	}
	
	t, err := tar.open("box.tar", "w")
	std.exitif(err)
	
	t.addFile("box.json")
	if len(meta.readme) > 0 {
		t.addFile(meta.readme)
	}
	
	for i,f in meta.include {
		if os.isfile(f) {
			t.addFile(f)
		} else {
			os.walk(f, fn(p: str) |t| {
				t.addFile(p)
			})
		}
	}
	
	err = t.finalize()
	std.exitif(err)
	
	err = t.close()
	std.exitif(err)
	
	if len(meta.postBuild) > 0 {
		code := std.system(meta.postBuild)

		if code != 0 {
			fprintf(std.stderr(), "Post-build failed with code %d\n", code)
			return
		}
	}
}

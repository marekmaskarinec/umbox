
import (
	"std.um"
	"../umbox/os/os.um"
	"../umbox/io/io.um"
	"../umbox/http/http.um"
	"../umbox/blake2/blake2.um"
	"../umbox/filepath/filepath.um"
	"common.um"
)

fn run*(url: str, argi: int) {
	if argi != std.argc() - 2 {
		fprintf(std.stderr(), "usage: umbox upload <token> <file>\n")
		return
	}
	
	token := std.argv(argi)
	file := std.argv(argi + 1)
	
	if !os.isfile(file) {
		fprintf(std.stderr(), "File not found\n")
		return
	}
		   
	if len(token) != 64 {
		fprintf(std.stderr(), "Invalid token\n")
		return
	}
	
	ok, meta := common.getMeta("box.json")
	if !ok {
		fprintf(std.stderr(), "Not in an UmBox directory\n")
		return
	}
				
	tokenHash := blake2.blake2b([]uint8([]char(token)))
	tokenHashStr := ""
	for i,b in tokenHash {
		tokenHashStr += sprintf("%02x", b)
	}
	f := std.fopen(file, "rb")
	r := io.mkFile(f)
	w := io.mkMemory({})
	reqUrl := sprintf("%s/api/package/%s/upload/%s", url, meta.name, filepath.file(file))
	resp := http.post(reqUrl, r, w, {
		headers: { sprintf("Authorization: UmBox %s", tokenHashStr) }
	})
	
	if !resp.ok {
		fprintf(std.stderr(), "Upload failed: %s\n", resp.err)
		return
	}   

	if resp.status != 200 {
		fprintf(std.stderr(), "Upload failed: %s (%d)\n", str([]char(w.read())), resp.status)
		return
	}
}

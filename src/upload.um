
import (
    "std.um"
    "../umbox/os/os.um"
    "../umbox/io/io.um"
    "../umbox/http/http.um"
    "../umbox/blake2/blake2.um"
    "../umbox/filepath/filepath.um"
    "common.um"
)

fn run*(url: str, argi: int) {
    if argi != std.argc() - 2 {
        printf("usage: umbox upload <token> <file>\n")
        return
    }
    
    token := std.argv(argi)
    file := std.argv(argi + 1)
    
    if !os.isfile(file) {
        printf("File not found\n")
        return
    }
           
    if len(token) != 64 {
        printf("Invalid token\n")
        return
    }
    
    ok, meta := common.getMeta("box.json")
    if !ok {
        printf("Not in an UmBox directory\n")
        return
    }
                
    tokenHash := blake2.blake2b([]uint8([]char(token)))
    tokenHashStr := ""
    for i,b in tokenHash {
        tokenHashStr += sprintf("%02x", b)
    }
    f := std.fopen(file, "rb")
    r := io.mkFile(f)
    w := io.mkMemory({})
    reqUrl := sprintf("%sapi/package/%s/%s/upload/%s", url, meta.name, tokenHashStr, filepath.file(file))
    resp := http.post(reqUrl, r, w)
    
    if resp.status != 200 {
        printf("Upload failed: %s\n", str([]char(w.read())))
        return
    }
}
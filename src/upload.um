
import (
	"std.um"
	"../umbox/os/os.um"
	"../umbox/http/http.um"
	"../umbox/blake2/blake2.um"
	"../umbox/filepath/filepath.um"
	"common.um"
)

fn run*(argi: int): std.Err {
	if argi != std.argc() - 2 {
		fprintf(std.stderr(), "usage: umbox upload <token> <file>\n")
		return {}
	}
	
	token := std.argv(argi)
	file := std.argv(argi + 1)
	
	if !os.isfile(file) {
		return std.error(1, "file not found")
	}
		   
	if len(token) != 64 {
		return std.error(1, "invalid token")
	}
	
	meta, err := common.getMeta("box.json")
	if err.code != 0 {
		return err
	}

	tokenHash := blake2.blake2b([]uint8([]char(token)))
	tokenHashStr := ""
	for i,b in tokenHash {
		tokenHashStr += sprintf("%02x", b)
	}
	f := std.fopen(file, "rb").item0
	
	reqUrl := sprintf("api/package/%s/upload/%s", meta.name, filepath.file(file))
	resp := common.post(std.freadall(f).item0, common.serverUrl, reqUrl, tokenHashStr)
	if !resp.ok {
		return std.error(1, resp.msg)
	}

	if resp.status != 200 {
		return std.error(1, sprintf("Request failed with code: %d\n", resp.status))
	}

	return {}
}

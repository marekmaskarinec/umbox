
import (
	"common.um"
	"std.um"
	"../umbox/os/os.um"
	"../umbox/filepath/filepath.um"
	"../umbox/strings/strings.um"
)

fn run*(args: []str): std::Err {
	meta, err := common::getMeta("box.json") 
	if err.code != 0 {
		return common::error(.boxJsonError, err.msg)
	}

	cmd := meta.run.get()
	pathSep := ""

	if os::getPlatform() == os::Platform.posix {
		pathSep = ":"
	}

	if os::getPlatform() == os::Platform.windows {
		pathSep = ";"
	}

	path := std::getenv("PATH")
	for i,d in meta.dependencies {
		cwd, err := os::getCwd()
		path = filepath::join(cwd, "umbox", d.getName()) + pathSep + path
	}
	os::setEnv("PATH", path)

	if len(cmd) > 0 {
		cmdSp := strings::split(cmd, " ")
		cmdSp[0] = filepath::fromslash(cmdSp[0])
		cmd = strings::join(append(cmdSp, args), " ")

		std::system(cmd)
	} else {
		std::system(strings::join(args, " "))
	}

	return {}
}
